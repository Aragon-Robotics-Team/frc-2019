plugins {
    id 'java'
    id 'application'
    id 'com.github.johnrengelman.shadow' version '4.0.3' apply false
}

mainClassName = 'frc.robot.vision.Main'

apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'jaci.gradle.EmbeddedTools'

repositories {
    mavenCentral()
    flatDir {
        dirs '/usr/local/frc/java', 'lib'
    }
}

dependencies {
    compile 'com.google.code.gson:gson:2.8.5'

    compile name: 'wpiutil'
    compile name: 'ntcore'
    compile name: 'cscore'
    compile name: 'cameraserver'
    compile name: 'opencv-344'
    compile name: 'wpilibj'
    compile name: 'wpiHal'
}

//wrapper {
    //gradleVersion = '5.0'
//}

deploy {
    targets {
		target('rpi') {
			directory = '/home/pi'
			failOnMissing = false
			timeout = 0.1
			
			locations {
				ssh {
					address = 'frcvision.local' //'10.8.40.96'
					user = 'pi'
					password = '840robotics'
				}
			}
		}
	}
	
	artifacts {
		all {
			directory = '.'
			targets << 'rpi'
		}
		
		commandArtifact('visionRW') {
			command = '/usr/bin/sudo /bin/mount -o remount,rw / '
			dependsOn('deployVisionRWBootRpi')
		}
		
		commandArtifact('visionRWBoot') {
			command = '/usr/bin/sudo /bin/mount -o remount,rw /boot '
		}
		
		fileArtifact('visionCombinedJar') {
			file = file("build/libs/${project.name}-all.jar")
			filename = 'uploaded.jar'
			
			dependsOn('build')
			dependsOn('deployVisionRWRpi')
		}
		
		fileArtifact('visionRunCamera') {
			file = file('runCamera')
			filename = 'runCamera.tmp'
			
			dependsOn('deployVisionCombinedJarRpi')
			dependsOn('deployVisionRWRpi')
			
			postdeploy << { execute '/usr/bin/sudo /bin/chown 1000:1000 ./runCamera.tmp'}
			postdeploy << { execute 'tr -d \'\\r\' < "runCamera.tmp" | tee "runCamera"'}
			postdeploy << { execute '/usr/bin/sudo /bin/chown 1000:1000 ./runCamera'}
			postdeploy << { execute '/usr/bin/sudo /bin/chmod +x ./runCamera'}
			postdeploy << { execute '/usr/bin/sudo /bin/rm -fdr ./runCamera.tmp'}
			
			postdeploy << { execute '/usr/bin/sudo /usr/bin/killall java'}
			postdeploy << { execute '/usr/bin/sudo /usr/bin/killall -9 java'}
			postdeploy << { execute '/usr/bin/sudo /bin/bash ./runService'}
			
			postdeploy << { execute '/usr/bin/sudo /bin/mount -o remount,ro / ' }
			postdeploy << { execute '/usr/bin/sudo /bin/mount -o remount,ro /boot ' }
		}
	}
}
